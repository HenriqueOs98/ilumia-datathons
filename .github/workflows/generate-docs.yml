name: Generate Documentation

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'infra/**'
      - 'scripts/generate_docs.py'
      # Exclude docs/** to prevent infinite loops
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'infra/**'
      - 'scripts/generate_docs.py'
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ast-tools pyyaml

      - name: Generate documentation
        run: |
          python scripts/generate_docs.py --project-root .

      - name: Check for documentation changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain docs/)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request for documentation updates
        if: steps.verify-changed-files.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "docs: auto-generate documentation"
          title: "📚 Auto-generated documentation updates"
          body: |
            ## 🤖 Automated Documentation Update
            
            This PR contains automatically generated documentation updates based on recent code changes.
            
            ### 📋 Changes Included
            - 🔄 Updated API documentation from Lambda function docstrings
            - 📦 Updated component documentation from source code
            - 🏗️ Updated infrastructure documentation from Terraform files
            - 🏛️ Updated architecture documentation
            
            ### 🔍 Review Notes
            - Documentation is auto-generated from code comments and docstrings
            - Please review for accuracy and completeness
            - Manual edits to generated files will be overwritten on next update
            - This PR was triggered by changes to: `${{ github.event.head_commit.message }}`
            
            ### 🚀 Auto-merge
            This PR can be safely auto-merged if the validation checks pass.
          branch: docs/auto-update-${{ github.run_number }}
          delete-branch: true
          labels: |
            documentation
            automated
            auto-merge
          assignees: ${{ github.actor }}
          draft: false

  validate-docs:
    runs-on: ubuntu-latest
    needs: generate-docs

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install documentation tools
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material markdown-include

      - name: Validate Markdown syntax
        run: |
          # Check for broken links and syntax issues
          find docs/ -name "*.md" -exec python -c "
          import sys
          import re
          
          def validate_markdown(file_path):
              with open(file_path, 'r') as f:
                  content = f.read()
              
              # Check for broken internal links
              links = re.findall(r'\[([^\]]+)\]\(([^)]+)\)', content)
              for link_text, link_url in links:
                  if link_url.startswith('http'):
                      continue  # Skip external links
                  if not link_url.startswith('#'):  # Skip anchors
                      # Check if file exists
                      import os
                      link_path = os.path.join(os.path.dirname(file_path), link_url)
                      if not os.path.exists(link_path):
                          print(f'Broken link in {file_path}: {link_url}')
                          return False
              
              # Check for proper heading structure
              headings = re.findall(r'^(#{1,6})\s+(.+)$', content, re.MULTILINE)
              prev_level = 0
              for heading_marks, heading_text in headings:
                  level = len(heading_marks)
                  if level > prev_level + 1:
                      print(f'Heading level skip in {file_path}: {heading_text}')
                      return False
                  prev_level = level
              
              return True
          
          if not validate_markdown(sys.argv[1]):
              sys.exit(1)
          " {} \;

      - name: Check documentation completeness
        run: |
          # Ensure all components have documentation
          python -c "
          import os
          import sys
          
          src_components = [d for d in os.listdir('src/') if os.path.isdir(f'src/{d}') and not d.startswith('.')]
          doc_files = [f[:-3] for f in os.listdir('docs/') if f.endswith('.md')]
          
          missing_docs = []
          for component in src_components:
              if component not in doc_files:
                  missing_docs.append(component)
          
          if missing_docs:
              print(f'Missing documentation for components: {missing_docs}')
              sys.exit(1)
          
          print('All components have documentation')
          "

      - name: Generate documentation site
        run: |
          # Create mkdocs.yml for documentation site
          cat > mkdocs.yml << EOF
          site_name: ONS Data Platform Documentation
          site_description: Comprehensive documentation for the ONS Data Platform
          site_author: Platform Engineering Team
          
          theme:
            name: material
            palette:
              primary: blue
              accent: light blue
            features:
              - navigation.tabs
              - navigation.sections
              - navigation.expand
              - search.highlight
          
          nav:
            - Home: index.md
            - Architecture: architecture.md
            - API Reference: api.md
            - Infrastructure: infrastructure.md
            - Components:
              - Batch PDF Processor: batch_pdf_processor.md
              - RAG Query Processor: rag_query_processor.md
              - Shared Utils: shared_utils.md
              - Structured Data Processor: structured_data_processor.md
              - Timestream Loader: timestream_loader.md
            - Operations:
              - Deployment Guide: deployment-guide.md
              - Operations Runbook: operations-runbook.md
              - Troubleshooting: troubleshooting.md
          
          markdown_extensions:
            - admonition
            - codehilite
            - toc:
                permalink: true
            - pymdownx.superfences:
                custom_fences:
                  - name: mermaid
                    class: mermaid
                    format: !!python/name:pymdownx.superfences.fence_code_format
          
          plugins:
            - search
            - markdown-include
          EOF
          
          # Build documentation site
          mkdocs build --strict

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v3
        with:
          name: documentation-site
          path: site/
          retention-days: 30

  deploy-docs:
    runs-on: ubuntu-latest
    needs: [generate-docs, validate-docs]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install documentation tools
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material markdown-include

      - name: Generate documentation
        run: |
          python scripts/generate_docs.py --project-root .

      - name: Create mkdocs.yml
        run: |
          cat > mkdocs.yml << EOF
          site_name: ONS Data Platform Documentation
          site_description: Comprehensive documentation for the ONS Data Platform
          site_author: Platform Engineering Team
          
          theme:
            name: material
            palette:
              primary: blue
              accent: light blue
            features:
              - navigation.tabs
              - navigation.sections
              - navigation.expand
              - search.highlight
          
          nav:
            - Home: index.md
            - Architecture: architecture.md
            - API Reference: api.md
            - Infrastructure: infrastructure.md
            - Components:
              - Batch PDF Processor: batch_pdf_processor.md
              - RAG Query Processor: rag_query_processor.md
              - Shared Utils: shared_utils.md
              - Structured Data Processor: structured_data_processor.md
              - Timestream Loader: timestream_loader.md
            - Operations:
              - Deployment Guide: deployment-guide.md
              - Operations Runbook: operations-runbook.md
              - Troubleshooting: troubleshooting.md
          
          markdown_extensions:
            - admonition
            - codehilite
            - toc:
                permalink: true
            - pymdownx.superfences:
                custom_fences:
                  - name: mermaid
                    class: mermaid
                    format: !!python/name:pymdownx.superfences.fence_code_format
          
          plugins:
            - search
            - markdown-include
          EOF

      - name: Build documentation site
        run: mkdocs build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          # cname: docs.ons-platform.com  # Optional: custom domain