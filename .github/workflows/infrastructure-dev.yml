name: Infrastructure Dev Deployment

on:
  push:
    branches-ignore:
      - main

env:
  TF_VERSION: '1.6.1'
  AWS_REGION: 'us-east-1'
  TF_VAR_region: 'us-east-1'

jobs:
  validate:
    uses: ./.github/workflows/reusable-terraform-validate.yml

  terraform-apply-dev:
    name: Terraform Apply (Dev)
    runs-on: ubuntu-latest
    needs: [validate]
    environment: dev
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        terraform_wrapper: false
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Setup Terraform state infrastructure
      run: |
        chmod +x scripts/setup-terraform-state.sh
        ./scripts/setup-terraform-state.sh
      env:
        AWS_REGION: ${{ env.AWS_REGION }}
    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=ons-data-platform-terraform-state-dev" \
          -backend-config="key=terraform.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}" \
          -backend-config="dynamodb_table=ons-data-platform-terraform-locks-dev"
      working-directory: infra
    - name: Terraform Destroy
      if: env.TERRAFORM_DESTROY_ENABLED == 'true'
      run: terraform destroy -auto-approve
      working-directory: infra
    - name: Terraform Plan
      id: plan
      run: |
        set +e
        terraform plan \
          -var="environment=dev" \
          -var="aws_region=${{ env.AWS_REGION }}" \
          -out=tfplan-dev \
          -detailed-exitcode
        PLAN_EXIT_CODE=$?
        echo "exitcode=$PLAN_EXIT_CODE" >> $GITHUB_OUTPUT
        echo "Terraform plan exit code: $PLAN_EXIT_CODE"
        if [ $PLAN_EXIT_CODE -eq 0 ]; then
          echo "‚úÖ No changes detected"
        elif [ $PLAN_EXIT_CODE -eq 2 ]; then
          echo "üìã Changes detected - will apply"
        else
          echo "‚ùå Plan failed with exit code $PLAN_EXIT_CODE"
          exit $PLAN_EXIT_CODE
        fi
      working-directory: infra
    - name: Terraform Apply
      if: steps.plan.outputs.exitcode == '2'
      run: |
        echo "üöÄ Applying Terraform changes..."
        terraform apply -compact-warnings -no-color tfplan-dev
        echo "‚úÖ Terraform apply completed successfully"
      working-directory: infra
    - name: Post-deployment validation
      run: |
        terraform output -json > outputs.json
        REQUIRED_OUTPUTS=("api_gateway_url" "s3_bucket_names" "lambda_function_names")
        for output in "${REQUIRED_OUTPUTS[@]}"; do
          if jq -e ".$output" outputs.json > /dev/null; then
            echo "‚úÖ Required output '$output' found"
          else
            echo "‚ö†Ô∏è Required output '$output' missing"
          fi
        done
        echo "Post-deployment validation completed"
      working-directory: infra
