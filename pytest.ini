[tool:pytest]
# Pytest configuration for ONS Data Platform

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 6.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=90
    --durations=10
    --maxfail=5

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    chaos: Chaos engineering tests
    security: Security and compliance tests
    load: Load testing scenarios
    slow: Slow running tests
    aws: Tests that require AWS services
    pdf: Tests related to PDF processing
    rag: Tests related to RAG functionality
    timestream: Tests related to Timestream
    s3: Tests related to S3
    lambda: Tests related to Lambda functions
    batch: Tests related to AWS Batch
    stress: Stress testing scenarios
    resilience: Resilience testing
    compliance: Compliance testing

# Test timeout
timeout = 300

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:boto3.*
    ignore::UserWarning:botocore.*

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage
[coverage:run]
source = src
omit = 
    */tests/*
    */venv/*
    */__pycache__/*
    */site-packages/*
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov